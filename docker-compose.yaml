# docker-compose.yml
version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: diary-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: diary_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - diary_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Login Service
  login_service:
    build:
      context: ./backend
      dockerfile: services/login_service/Dockerfile
    container_name: diary-login-service
    restart: always
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_NAME: diary_db
      SECRET_KEY: tu_clave_secreta_super_segura_123
    ports:
      - "5001:5001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - diary_network

  # Entry Service (WRITE)
  entry_service:
    build:
      context: ./backend
      dockerfile: services/entry_service/Dockerfile
    container_name: diary-entry-service
    restart: always
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_NAME: diary_db
      SECRET_KEY: tu_clave_secreta_super_segura_123
    ports:
      - "5002:5002"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - diary_network

  # Search Service (READ)
  search_service:
    build:
      context: ./backend
      dockerfile: services/search_service/Dockerfile
    container_name: diary-search-service
    restart: always
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_NAME: diary_db
      SECRET_KEY: tu_clave_secreta_super_segura_123
    ports:
      - "5003:5003"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - diary_network

  # API Gateway
  api_gateway:
    build:
      context: ./backend
      dockerfile: gateway/Dockerfile
    container_name: diary-api-gateway
    restart: always
    environment:
      SECRET_KEY: tu_clave_secreta_super_segura_123
      LOGIN_SERVICE: http://login_service:5001
      ENTRY_SERVICE: http://entry_service:5002
      SEARCH_SERVICE: http://search_service:5003
    ports:
      - "5000:5000"
    depends_on:
      - login_service
      - entry_service
      - search_service
    networks:
      - diary_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: diary-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - api_gateway
    networks:
      - diary_network

networks:
  diary_network:
    driver: bridge

volumes:
  mysql_data: